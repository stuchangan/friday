spring:
  profiles:
    active: dev

  devtools:
    restart:
      additional-paths: resources/**,static/**,templates/** #需要实时更新的目录



  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:12345/Friday?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: root
    password: 12345
    platform: mysql
    #连接池指定spring2.02版本默认使用hikaricp此处替换druid连接池
    #下面是连接池配置
    type: com.alibaba.druid.pool.DruidDataSource
    #初始化大小，最大、最小
    initialSize: 1
    minIdle: 3
    #最大连接个数
    maxActive: 20
    #获取连接时最大等待时间，单位毫秒。
    maxWait: 60000
    #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    #配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    #用来检测连接是否有效的sql，要求是一个查询语句。
    validationQuery: select 'x'
    #建议配置为true，不影响性能，并且保证安全性。
    #如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testWhileIdle: true
    #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnBorrow: false
    #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false

    #是否缓存preparedStatement，也就是PSCache。
    #PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
    poolPreparedStatements: false
    #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
    #在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
    maxPoolPreparedStatementPerConnectionSize: -1

    #通过别名的方式配置扩展插件，常用的插件有：
    #监控统计用的filter:stat，日志用的filter:log4j，防御sql注入的filter:wall
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: false







logging:
  path: F:/log/Friday

mybatis:
  type-aliases-package: com.friday.friday.model
  mapper-locations: classpath:/mabatis-mappers/*
  configuration:
    map-underscore-to-camel-case: true


api-url: /api
